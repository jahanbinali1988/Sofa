// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sofa.CourseManagement.EntityFramework.Context;

namespace Sofa.CourseManagement.EntityFramework.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201207150833_12-7-2020-2")]
    partial class _12720202
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sofa.CourseManagement.Model.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AgeRange")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FieldId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RowVersion")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_Course");

                    b.HasIndex("FieldId");

                    b.ToTable("Course");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b70d992c-2b43-496a-9981-3578e2d0ec4c"),
                            AgeRange = 2,
                            CreateDate = new DateTime(2020, 12, 7, 18, 38, 32, 637, DateTimeKind.Local).AddTicks(1946),
                            Description = "",
                            FieldId = new Guid("ccdd20d4-b2a0-455a-8f7a-168503776b82"),
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RowVersion = 0,
                            Title = "DefaultCourse"
                        });
                });

            modelBuilder.Entity("Sofa.CourseManagement.Model.Field", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InstituteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RowVersion")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_Field");

                    b.HasIndex("InstituteId");

                    b.ToTable("Field");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ccdd20d4-b2a0-455a-8f7a-168503776b82"),
                            CreateDate = new DateTime(2020, 12, 7, 18, 38, 32, 635, DateTimeKind.Local).AddTicks(9667),
                            Description = "",
                            InstituteId = new Guid("e9a52e3d-27aa-4726-a1a9-bf90b6cc2357"),
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RowVersion = 0,
                            Title = "DefaultField"
                        });
                });

            modelBuilder.Entity("Sofa.CourseManagement.Model.Institute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RowVersion")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebsiteUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_Institute");

                    b.ToTable("Institute");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e9a52e3d-27aa-4726-a1a9-bf90b6cc2357"),
                            Code = "5efb613e-9a32-4d00-a5f9-966974fe0396",
                            CreateDate = new DateTime(2020, 12, 7, 18, 38, 32, 634, DateTimeKind.Local).AddTicks(9914),
                            Description = "2f0e46c9-6236-44b4-b14e-ac2e5cef4d13",
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RowVersion = 0,
                            Title = "TestInstitute",
                            WebsiteUrl = "2f52352f-3f29-4802-8025-eabdfde4534b"
                        });
                });

            modelBuilder.Entity("Sofa.CourseManagement.Model.LessonPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RowVersion")
                        .HasColumnType("int");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_LessonPlan");

                    b.ToTable("LessonPlan");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0908ec03-9f07-426a-a26c-78cac8646545"),
                            CreateDate = new DateTime(2020, 12, 7, 18, 38, 32, 639, DateTimeKind.Local).AddTicks(8069),
                            Description = "",
                            IsActive = true,
                            IsDeleted = false,
                            Level = 0,
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RowVersion = 0,
                            SessionId = new Guid("49f4c5f7-d568-449c-9b5f-4d5b987e1e59")
                        });
                });

            modelBuilder.Entity("Sofa.CourseManagement.Model.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContentType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LessonPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<short>("Order")
                        .HasColumnType("smallint");

                    b.Property<int>("RowVersion")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnName("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_Post");

                    b.HasIndex("LessonPlanId");

                    b.ToTable("Post");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b0108b2c-5837-4f22-b78d-857bc22f9554"),
                            Content = "Sample Content",
                            ContentType = 0,
                            CreateDate = new DateTime(2020, 12, 7, 18, 38, 32, 642, DateTimeKind.Local).AddTicks(2050),
                            Description = "",
                            IsActive = true,
                            IsDeleted = false,
                            LessonPlanId = new Guid("0908ec03-9f07-426a-a26c-78cac8646545"),
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Order = (short)1,
                            RowVersion = 0,
                            Title = "DefaultPost"
                        });
                });

            modelBuilder.Entity("Sofa.CourseManagement.Model.Session", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LessonPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RowVersion")
                        .HasColumnType("int");

                    b.Property<Guid>("TermId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_Session");

                    b.HasIndex("LessonPlanId")
                        .IsUnique();

                    b.HasIndex("TermId");

                    b.ToTable("Session");

                    b.HasData(
                        new
                        {
                            Id = new Guid("49f4c5f7-d568-449c-9b5f-4d5b987e1e59"),
                            CreateDate = new DateTime(2020, 12, 7, 18, 38, 32, 640, DateTimeKind.Local).AddTicks(8274),
                            Description = "",
                            IsActive = true,
                            IsDeleted = false,
                            LessonPlanId = new Guid("0908ec03-9f07-426a-a26c-78cac8646545"),
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RowVersion = 0,
                            TermId = new Guid("21b8dc7f-9d87-409d-9ec1-46287e7a6559"),
                            Title = "DefaultSession"
                        });
                });

            modelBuilder.Entity("Sofa.CourseManagement.Model.Term", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RowVersion")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_Term");

                    b.HasIndex("CourseId");

                    b.ToTable("Term");

                    b.HasData(
                        new
                        {
                            Id = new Guid("21b8dc7f-9d87-409d-9ec1-46287e7a6559"),
                            CourseId = new Guid("b70d992c-2b43-496a-9981-3578e2d0ec4c"),
                            CreateDate = new DateTime(2020, 12, 7, 18, 38, 32, 638, DateTimeKind.Local).AddTicks(5539),
                            Description = "",
                            IsActive = true,
                            IsDeleted = false,
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RowVersion = 0,
                            Title = "DefaultTerm"
                        });
                });

            modelBuilder.Entity("Sofa.CourseManagement.Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("RowVersion")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_User");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("731874e2-b89c-4509-819a-5b69396a336b"),
                            CreateDate = new DateTime(2020, 12, 7, 18, 38, 32, 589, DateTimeKind.Local).AddTicks(5040),
                            Description = "",
                            Email = "jahanbin.ali1988@gmail.com",
                            FirstName = "Ali",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Jahanbin",
                            Level = 1,
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "JB661pQ8yCirbaGKuNu8wIZjd7/lq74u5bDYUaX6GW0=",
                            PhoneNumber = "09224957626",
                            Role = 0,
                            RowVersion = 0,
                            UserName = "sysadmin"
                        },
                        new
                        {
                            Id = new Guid("253e472e-21ac-4864-b218-b364169d0611"),
                            CreateDate = new DateTime(2020, 12, 7, 18, 38, 32, 608, DateTimeKind.Local).AddTicks(1963),
                            Description = "",
                            Email = "jahanbin.ali1988@gmail.com",
                            FirstName = "Ali",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Jahanbin",
                            Level = 2,
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "JB661pQ8yCirbaGKuNu8wIZjd7/lq74u5bDYUaX6GW0=",
                            PhoneNumber = "09224957626",
                            Role = 1,
                            RowVersion = 0,
                            UserName = "teacher"
                        },
                        new
                        {
                            Id = new Guid("50ecc8e1-5c5c-4a97-a5f5-af9e9eba1b70"),
                            CreateDate = new DateTime(2020, 12, 7, 18, 38, 32, 622, DateTimeKind.Local).AddTicks(2867),
                            Description = "",
                            Email = "jahanbin.ali1988@gmail.com",
                            FirstName = "Ali",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Jahanbin",
                            Level = 0,
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "JB661pQ8yCirbaGKuNu8wIZjd7/lq74u5bDYUaX6GW0=",
                            PhoneNumber = "09224957626",
                            Role = 2,
                            RowVersion = 0,
                            UserName = "sysadmin"
                        });
                });

            modelBuilder.Entity("Sofa.CourseManagement.Model.Course", b =>
                {
                    b.HasOne("Sofa.CourseManagement.Model.Field", "Field")
                        .WithMany("Courses")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sofa.CourseManagement.Model.Field", b =>
                {
                    b.HasOne("Sofa.CourseManagement.Model.Institute", "Institute")
                        .WithMany("Fields")
                        .HasForeignKey("InstituteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sofa.CourseManagement.Model.Institute", b =>
                {
                    b.OwnsOne("Sofa.CourseManagement.Model.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("InstituteId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Country")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("State")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Street")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ZipCode")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("InstituteId");

                            b1.ToTable("Institute");

                            b1.WithOwner()
                                .HasForeignKey("InstituteId");
                        });
                });

            modelBuilder.Entity("Sofa.CourseManagement.Model.Post", b =>
                {
                    b.HasOne("Sofa.CourseManagement.Model.LessonPlan", "LessonPlan")
                        .WithMany("Posts")
                        .HasForeignKey("LessonPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sofa.CourseManagement.Model.Session", b =>
                {
                    b.HasOne("Sofa.CourseManagement.Model.LessonPlan", "LessonPlan")
                        .WithOne("Session")
                        .HasForeignKey("Sofa.CourseManagement.Model.Session", "LessonPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sofa.CourseManagement.Model.Term", "Term")
                        .WithMany("Sessions")
                        .HasForeignKey("TermId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sofa.CourseManagement.Model.Term", b =>
                {
                    b.HasOne("Sofa.CourseManagement.Model.Course", "Course")
                        .WithMany("Terms")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
